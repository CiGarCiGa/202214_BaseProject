{
	"info": {
		"_postman_id": "5f22e471-4e72-4466-a3a1-e1e258eb2995",
		"name": "Productos-Tiendas",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5836993"
	},
	"item": [
		{
			"name": "Agregar una nueva tienda a las oferentes de un producto.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Crear Producto\r",
							"const options_p = {\r",
							"  url:  pm.variables.get(\"baseUrl\")+\"/productos\", \r",
							"  method: 'POST',\r",
							"  header: {\r",
							"    'Content-Type': 'application/json',\r",
							"  },\r",
							"  body: {\r",
							"     mode: 'raw',\r",
							"     raw: JSON.stringify({ \"nombre\":\"producto 1\", \"tipo\":\"Perecedero\", \"precio\": 10 })\r",
							"  }\r",
							"};\r",
							"\r",
							"pm.sendRequest(options_p, function (err, res) {\r",
							"  var data = res.json()\r",
							"  pm.globals.set(\"producto_id\", data.id);\r",
							"});\r",
							"\r",
							"// Crear tienda\r",
							"const options_t = {\r",
							"  url:  pm.variables.get(\"baseUrl\")+\"/tiendas\", \r",
							"  method: 'POST',\r",
							"  header: {\r",
							"    'Content-Type': 'application/json',\r",
							"  },\r",
							"  body: {\r",
							"     mode: 'raw',\r",
							"     raw: JSON.stringify({ \"nombre\":\"Tienda 1\", \"ciudad\":\"BGT\", \"direccion\":\"Dirección\" })\r",
							"  }\r",
							"};\r",
							"\r",
							"pm.sendRequest(options_t, function (err, res) {\r",
							"  var data = res.json()\r",
							"  pm.globals.set(\"tienda_id\", data.id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/productos/{{producto_id}}/tiendas/{{tienda_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"productos",
						"{{producto_id}}",
						"tiendas",
						"{{tienda_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar una tienda que no existe a las oferentes de un producto.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The tienda with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\":\"producto 1\",\r\n    \"tipo\":\"tipo inválido\",\r\n    \"precio\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/productos/{{producto_id}}/tiendas/{{invalid_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"productos",
						"{{producto_id}}",
						"tiendas",
						"{{invalid_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todas las tiendas que ofrecen un producto.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of tiendas > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/productos/{{producto_id}}/tiendas",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"productos",
						"{{producto_id}}",
						"tiendas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener una tienda que ofrece un producto.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/productos/{{producto_id}}/tiendas/{{tienda_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"productos",
						"{{producto_id}}",
						"tiendas",
						"{{tienda_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener una tienda que ofrece un producto que no existe.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The producto with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/productos/{{invalid_id}}/tiendas/{{tienda_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"productos",
						"{{invalid_id}}",
						"tiendas",
						"{{tienda_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar las tiendas que ofrecen un producto.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[{\r\n    \"id\":\"{{tienda_id}}\"\r\n}]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/productos/{{producto_id}}/tiendas",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"productos",
						"{{producto_id}}",
						"tiendas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar las tiendas que ofrecen un producto, con una tienda inexistente.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The tienda with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[{\r\n    \"id\":\"{{invalid_id}}\"\r\n}]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/productos/{{producto_id}}/tiendas",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"productos",
						"{{producto_id}}",
						"tiendas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar una tienda que ofrece un producto.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/productos/{{producto_id}}/tiendas/{{tienda_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"productos",
						"{{producto_id}}",
						"tiendas",
						"{{tienda_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar una tienda que no ofrece un producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The producto with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/productos/{{invalid_id}}/tiendas/{{tienda_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"productos",
						"{{invalid_id}}",
						"tiendas",
						"{{tienda_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "producto_id",
			"value": "0fcb7952-0ff6-459a-adbb-01fdfc049037",
			"type": "string",
			"disabled": true
		},
		{
			"key": "invalid_id",
			"value": "00000000-0000-0000-0000-000000000000",
			"type": "string"
		},
		{
			"key": "tienda_id",
			"value": "83debfb5-ae09-4b25-a5c7-a31e0c7be4f1",
			"type": "string",
			"disabled": true
		}
	]
}